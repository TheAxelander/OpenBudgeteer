@page "/transaction"
@using System.Drawing
@using System.Globalization
@using OpenBudgeteer.Core.Common.Extensions

<div class="d-flex flex-row flex-wrap">
    @if (_massEditEnabled)
    {
        <button class="btn btn-sm btn-primary me-2 mb-2" @onclick="@SaveAllTransaction">Save all</button>
        <button class="btn btn-sm btn-danger me-auto mb-2" @onclick="@CancelAllTransaction">Cancel all</button>
    }
    else
    {
        <button class="btn btn-sm btn-primary me-2 mb-2" @onclick="@StartCreateNewTransaction">Create Transaction</button>
        <button class="btn btn-sm btn-primary me-2 mb-2" @onclick="@EditAllTransaction">Edit all</button>
        <button class="btn btn-sm btn-primary me-2 mb-2" @onclick="@(async () => await ProposeBucketsAsync())">Propose Buckets</button>
        <div class="btn-group btn-group-sm me-auto mb-2" role="group">
            <button type="button" class="btn btn-sm btn-primary" @onclick="@AddRecurringTransactions">Add Recurring Transactions</button>
            <button type="button" class="btn btn-sm btn-primary dropdown-toggle dropdown-toggle-split" data-bs-toggle="dropdown" aria-expanded="false">
                <span class="visually-hidden">Toggle Dropdown</span>
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item dropdown-item-sm" role="button" @onclick="@(async () => await DisplayRecurringTransactions())">Manage</a></li>
            </ul>
        </div>
    }
    <select class="form-select form-select-sm me-2 mb-2" style="width: auto"
            @bind:get="_dataContext.CurrentFilter.ToString()"
            @bind:set="Filter_SelectionChanged">
        @foreach (var filter in Enum.GetValues<TransactionFilter>())
        {
            <option value="@filter">@filter.GetStringValue()</option>
        }
    </select>
    <YearMonthSelector Class="mb-2" DataContext="YearMonthDataContext" />
</div>

@if (_newTransactionEnabled)
{
    <table class="table table-sm">
        <thead>
            <tr>
                <th class="d-none d-sm-table-cell" style="text-align: right; width:100px">Date</th>
                <th class="d-none d-md-table-cell" style="width:150px">Account</th>
                <th class="d-none d-xl-table-cell" style="width:250px">Payee</th>
                <th class="d-none d-sm-table-cell">Memo</th>
                <th class="d-none d-sm-table-cell" style="text-align: right; width: 120px">Amount</th>
                <th class="d-none d-lg-table-cell" style="width:300px">Buckets</th>
                <th class="d-none d-md-table-cell" style="width:1px" />
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="d-none d-sm-table-cell">
                    <input class="form-control form-control-sm number-input" type="date" @bind="_dataContext.NewTransaction!.TransactionDate" />
                </td>
                <td class="d-none d-md-table-cell">
                    <select class="form-select form-select-sm"
                            @bind:get="_dataContext.NewTransaction.SelectedAccount.AccountId.ToString()"
                            @bind:set="NewTransactionAccount_SelectionChanged">
                        @foreach (var account in _dataContext.NewTransaction.AvailableAccounts)
                        {
                            <option value="@account.AccountId">@account.Name</option>
                        }
                    </select>
                </td>
                <td class="d-none d-xl-table-cell"><input class="form-control form-control-sm" type="text" @bind="_dataContext.NewTransaction.Payee" /></td>
                <td class="d-none d-sm-table-cell"><textarea class="form-control form-control-sm" rows="1" @bind="_dataContext.NewTransaction.Memo"></textarea></td>
                <td class="d-none d-sm-table-cell"><input class="form-control form-control-sm number-input" type="number" @bind="_dataContext.NewTransaction.Amount" /></td>
                <td class="d-none d-lg-table-cell">
                    <table class="table" style="margin-bottom: auto">
                        <tbody>
                            @foreach (var bucket in _dataContext.NewTransaction.Buckets)
                            {
                                <tr>
                                    <td>
                                        <button class="btn btn-sm btn-bucket" style="background-color: @ColorTranslator.ToHtml(bucket.SelectedBucketColor); color: @ColorTranslator.ToHtml(bucket.SelectedBucketTextColor)" @onclick="() => HandleShowBucketSelectDialog(_dataContext.NewTransaction, bucket)">
                                            @bucket.SelectedBucketName
                                        </button>
                                    </td>
                                    <td style="width: 90px"><input class="form-control form-control-sm number-input" type="number" @bind="bucket.Amount" /></td>
                                    <td style="width: 1px"><button class="btn btn-sm btn-danger bi bi-trash3" @onclick="@(() => bucket.DeleteBucket())"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                                    
                    @if (_dataContext.NewTransaction.Difference != 0)
                    {
                        <div class="row bucket-indicator" style="background-color: deepskyblue">
                            <div class="col">Remaining</div>
                            <div class="col-md-auto col-numbers">@(_dataContext.NewTransaction.Difference)</div>
                        </div>
                    }
                </td>
                <td class="d-none d-md-table-cell col-buttons">
                    <button class="btn btn-sm btn-primary" @onclick="@(() => SplitTransaction(_dataContext.NewTransaction))"><i class="bi bi-diagram-2"></i></button>
                    <button class="btn btn-sm btn-primary bi bi-check-lg" @onclick="@(() => HandleResult(_dataContext.CreateItem()))"></button>
                    <button class="btn btn-sm btn-danger bi bi-x-lg" @onclick="@CancelNewTransaction"></button>
                </td>
            </tr>
        </tbody>
    </table>
}

<table class="table table-sm table-hover">
    <thead>
    <tr>
        <th class="d-none d-sm-table-cell" style="text-align: right; width:100px">Date</th>
        <th class="d-none d-md-table-cell" style="width:150px">Account</th>
        <th class="d-none d-xl-table-cell" style="width:250px">Payee</th>
        <th class="d-none d-sm-table-cell">Memo</th>
        <th class="d-none d-sm-table-cell" style="text-align: right; width: 120px">Amount</th>
        <th class="d-none d-lg-table-cell" style="width:300px">Buckets</th>
        <th class="d-none d-md-table-cell" style="width:120px" />
    </tr>
    </thead>
    <tbody>
    @foreach (var transaction in _dataContext.Transactions)
    {
        @if (transaction.InModification)
        {
            <tr>
                <td class="d-none d-sm-table-cell">
                    <input class="form-control form-control-sm number-input" type="date" @bind="transaction.TransactionDate" />
                </td>
                <td class="d-none d-md-table-cell">
                    <select class="form-select form-select-sm"
                            @bind:get="transaction.SelectedAccount.AccountId.ToString()"
                            @bind:set="(value) => { TransactionAccount_SelectionChanged(value, transaction); }">
                        @foreach (var account in transaction.AvailableAccounts)
                        {
                            <option value="@account.AccountId">@account.Name</option>
                        }
                    </select>
                </td>
                <td class="d-none d-xl-table-cell"><input class="form-control form-control-sm" type="text" @bind="transaction.Payee" /></td>
                <td class="d-none d-sm-table-cell"><textarea class="form-control form-control-sm" rows="1" @bind="transaction.Memo"></textarea></td>
                <td class="d-none d-sm-table-cell"><input class="form-control form-control-sm number-input" type="number" @bind="transaction.Amount" /></td>
                <td class="d-none d-lg-table-cell">
                    <table class="table table-borderless" style="margin-bottom: auto;">
                        <tbody>
                            @foreach (var bucket in transaction.Buckets)
                            {
                                <tr>
                                    <td>
                                        <button class="btn btn-sm btn-bucket" style="background-color: @ColorTranslator.ToHtml(bucket.SelectedBucketColor); color: @ColorTranslator.ToHtml(bucket.SelectedBucketTextColor)" @onclick="() => HandleShowBucketSelectDialog(transaction, bucket)">
                                            @bucket.SelectedBucketName
                                        </button>
                                    </td>
                                    <td style="width: 90px"><input class="form-control form-control-sm number-input" type="number" @bind="bucket.Amount" /></td>
                                    <td style="width: 1px"><button class="btn btn-sm btn-danger bi bi-trash3" @onclick="@(() => bucket.DeleteBucket())"></button></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                                    
                    @if (transaction.Difference != 0)
                    {
                        <div class="row bucket-indicator" style="background-color: deepskyblue">
                            <div class="col">Remaining</div>
                            <div class="col-md-auto col-numbers">@(transaction.Difference)</div>
                        </div>
                    }
                </td>
                <td class="d-none d-md-table-cell col-buttons">
                    <button class="btn btn-sm btn-primary" @onclick="@(() => SplitTransaction(transaction))"><i class="bi bi-diagram-2"></i></button>
                    <button class="btn btn-sm btn-primary bi bi-check-lg" @onclick="@(() => SaveTransaction(transaction))"></button>
                    <button class="btn btn-sm btn-danger bi bi-x-lg" @onclick="@(() => transaction.CancelModification())"></button>
                </td>
            </tr>
        }
        else
        {
            <tr>
                <td class="d-none d-sm-table-cell col-numbers">@transaction.TransactionDate.ToShortDateString()</td>
                <td class="d-none d-md-table-cell">@transaction.SelectedAccount.Name</td>
                <td class="d-none d-xl-table-cell">@transaction.Payee</td>
                <td class="d-none d-sm-table-cell">@transaction.Memo</td>
                <td class="d-none d-sm-table-cell col-numbers">@transaction.Amount.ToString("C", CultureInfo.CurrentCulture)</td>
                <td class="d-none d-lg-table-cell" style="vertical-align: middle">
                    @foreach (var bucket in transaction.Buckets)
                    {
                        <div class="row bucket-indicator" style="background-color: @ColorTranslator.ToHtml(bucket.SelectedBucketColor); color: @ColorTranslator.ToHtml(bucket.SelectedBucketTextColor)">
                            <div class="col">@bucket.SelectedBucketName</div>
                            <div class="col-md-auto col-numbers">@bucket.Amount.ToString("C", CultureInfo.CurrentCulture)</div>
                        </div>
                    }
                </td>
                <td class="d-none d-md-table-cell col-buttons">
                    <button class="btn btn-sm btn-primary bi bi-pencil" @onclick="@(() => transaction.StartModification())"></button>
                    <button class="btn btn-sm btn-danger bi bi-trash3" @onclick="@(() => HandleShowDeletionTransactionDialog(transaction))"></button>
                </td>
            </tr>
        }
    }
    </tbody>
</table>

<RecurringTransactionDialog
    DataContext="@_recurringTransactionHandlerViewModel"
    IsDialogVisible="@_isRecurringTransactionModalDialogVisible"
    OnClickCallback="@(() => _isRecurringTransactionModalDialogVisible = false)"/>

<BucketSelectDialog
    DataContext="@_bucketSelectDialogDataContext"
    IsDialogVisible="@_isBucketSelectDialogVisible"
    IsDialogLoading="@_isBucketSelectDialogLoading"
    OnBucketSelectedCallback="UpdateSelectedBucket"
    OnCancelCallback="@(() => _isBucketSelectDialogVisible = false)"/>

<DeleteConfirmationDialog 
    Title="Delete Transaction" 
    Message="Do you really want to delete this Transaction?" 
    IsDialogVisible="@_isDeleteTransactionDialogVisible"
    OnDeleteClickCallback="DeleteTransaction"
    OnCancelClickCallback="CancelDeleteTransaction"/>

<InfoDialog
    Title="Propose Buckets"
    Message="Searching Buckets based on defined rules..."
    IsDialogVisible="@_isProposeBucketsInfoDialogVisible"
    IsInteractionEnabled="@false"/>

<ErrorMessageDialog 
    Title="Transaction" 
    Message="@_errorModalDialogMessage" 
    IsDialogVisible="@_isErrorModalDialogVisible"
    OnClickCallback="@(() => _isErrorModalDialogVisible = false)"/>
